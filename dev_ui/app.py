# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'initial_gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import requests
import sqlite3


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 520)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(800, 520))
        MainWindow.setMaximumSize(QtCore.QSize(800, 520))
        font = QtGui.QFont()
        font.setPointSize(14)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.image_container = QtWidgets.QLabel(self.centralwidget)
        self.image_container.setGeometry(QtCore.QRect(10, 10, 500, 500))
        self.image_container.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.image_container.setTextFormat(QtCore.Qt.PlainText)
        self.image_container.setAlignment(QtCore.Qt.AlignCenter)
        self.image_container.setScaledContents(True)
        self.image_container.setObjectName("image_container")
        self.search_btn = QtWidgets.QPushButton(self.centralwidget)
        self.search_btn.setGeometry(QtCore.QRect(530, 71, 200, 30))
        font = QtGui.QFont()
        font.setFamily("Space Mono")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(True)
        self.search_btn.setFont(font)
        self.search_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.search_btn.setStyleSheet("")
        self.search_btn.setObjectName("search_btn")
        self.search_btn.setGeometry(QtCore.QRect(530, 70, 250, 30))
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(530, 30, 250, 30))
        self.lineEdit.setObjectName("lineEdit")
        self.delete_btn = QtWidgets.QPushButton(self.centralwidget)
        self.delete_btn.setGeometry(QtCore.QRect(530, 110, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Space Mono")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(True)
        self.delete_btn.setFont(font)
        self.delete_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.delete_btn.setObjectName("delete_btn")
        self.update_btn = QtWidgets.QPushButton(self.centralwidget)
        self.update_btn.setEnabled(False)
        self.update_btn.setGeometry(QtCore.QRect(530, 150, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Space Mono")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(True)
        self.update_btn.setFont(font)
        self.update_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.update_btn.setObjectName("update_btn")
        self.shortcode_label = QtWidgets.QLabel(self.centralwidget)
        self.shortcode_label.setGeometry(QtCore.QRect(530, 10, 91, 16))
        font = QtGui.QFont()
        font.setFamily("Space Mono")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.shortcode_label.setFont(font)
        self.shortcode_label.setObjectName("shortcode_label")
        self.teach_ai_btn = QtWidgets.QPushButton(self.centralwidget)
        self.teach_ai_btn.setEnabled(False)
        self.teach_ai_btn.setGeometry(QtCore.QRect(530, 190, 250, 30))
        font = QtGui.QFont()
        font.setFamily("Space Mono")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        font.setKerning(True)
        self.teach_ai_btn.setFont(font)
        self.teach_ai_btn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.teach_ai_btn.setObjectName("teach_ai_btn")
        self.status_label = QtWidgets.QLabel(self.centralwidget)
        self.status_label.setGeometry(QtCore.QRect(430, 485, 71, 16))
        font = QtGui.QFont()
        font.setFamily("Space Mono")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.status_label.setFont(font)
        self.status_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.status_label.setObjectName("status_label")
        self.status_label.setGeometry(QtCore.QRect(380, 485, 120, 20))
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(530, 240, 201, 91))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(10)
        self.groupBox.setFont(font)
        self.groupBox.setObjectName("groupBox")
        self.likes_label = QtWidgets.QLabel(self.groupBox)
        self.likes_label.setGeometry(QtCore.QRect(20, 30, 150, 13))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(10)
        font.setItalic(False)
        self.likes_label.setFont(font)
        self.likes_label.setObjectName("likes_label")
        self.comments_label = QtWidgets.QLabel(self.groupBox)
        self.comments_label.setGeometry(QtCore.QRect(20, 50, 150, 16))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(10)
        font.setItalic(False)
        self.comments_label.setFont(font)
        self.comments_label.setObjectName("comments_label")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.search_btn.clicked.connect(self.query)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Jogja Barkas Instagram"))
        self.lineEdit.setText(_translate("MainWindow","CdkKXK9p7hOdKxgtry4sggDIJtX94oAjuaEvz00"))
        self.image_container.setText(_translate("MainWindow", "Thumbnail will be here.."))
        self.search_btn.setText(_translate("MainWindow", "üîç Search"))
        self.delete_btn.setText(_translate("MainWindow", "üóë Delete"))
        self.update_btn.setText(_translate("MainWindow", "üîÑ Update Label"))
        self.shortcode_label.setText(_translate("MainWindow", "Shortcode"))
        self.teach_ai_btn.setText(_translate("MainWindow", "ü§ñ Teach AI"))
        self.status_label.setText(_translate("MainWindow", "SOLD"))
        self.groupBox.setTitle(_translate("MainWindow", "Barkas"))
        self.likes_label.setText(_translate("MainWindow", "Likes:"))
        self.comments_label.setText(_translate("MainWindow", "Comments:"))

    def query(self):
        print(self.lineEdit.text())
        shortcode = self.lineEdit.text()
        with sqlite3.connect("../data/barkas.db") as con:
            cur = con.cursor()
            cur.execute("SELECT label,likes,comments,thumbnail FROM posts WHERE shortcode=?",(shortcode,))
            result = cur.fetchone()
            if result != None:
                entry = dict(
                    shortcode=shortcode,
                    label=result[0],
                    likes=result[1],
                    comments=result[2],
                    thumbnail_url=result[3]
                )
                
                self.status_label.setText(str(entry['label']) if entry['label'] != None else "NOT DEFINED")
                self.likes_label.setText("Likes: " + str(entry['likes']))
                self.comments_label.setText("Comments: " + str(entry['comments']))
                image = QtGui.QImage()
                image.loadFromData(requests.get(entry['thumbnail_url']).content)
                self.image_container.setPixmap(QtGui.QPixmap(image))


if __name__ == "__main__":
    import sys
    import os

    with open("gui_style.css","r") as f:
        style = f.read()

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    MainWindow.setStyleSheet(style)
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
